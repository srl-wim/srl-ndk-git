/*
Package ndk-git is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was false
in this case).

This package was generated by /Users/henderiw/CodeProjects/go/pkg/mod/github.com/openconfig/ygot@v0.8.3/genutil/names.go
using the following YANG input files:
	- ../yang/ndk-git-types.yang
	- ../yang/ndk-git.yang
Imported modules were sourced from:
	- ../../../../goysrl/yang/...
*/
package ndkgit

import (
	"encoding/json"
	"fmt"
	"reflect"

	"github.com/openconfig/ygot/ygot"
	"github.com/openconfig/goyang/pkg/yang"
	"github.com/openconfig/ygot/ytypes"
)


// SrlNokiaNetworkInstance_NetworkInstance represents the /srl_nokia-network-instance/network-instance YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance struct {
	AdminState	E_SrlNokiaNetworkInstance_AdminState	`path:"admin-state" module:"srl_nokia-network-instance"`
	BridgeTable	*SrlNokiaNetworkInstance_NetworkInstance_BridgeTable	`path:"bridge-table" module:"srl_nokia-network-instance"`
	Description	*string	`path:"description" module:"srl_nokia-network-instance"`
	Icmp	*SrlNokiaNetworkInstance_NetworkInstance_Icmp	`path:"icmp" module:"srl_nokia-network-instance"`
	Icmp6	*SrlNokiaNetworkInstance_NetworkInstance_Icmp6	`path:"icmp6" module:"srl_nokia-network-instance"`
	Interface	map[string]*SrlNokiaNetworkInstance_NetworkInstance_Interface	`path:"interface" module:"srl_nokia-network-instance"`
	IpForwarding	*SrlNokiaNetworkInstance_NetworkInstance_IpForwarding	`path:"ip-forwarding" module:"srl_nokia-network-instance"`
	IpLoadBalancing	*SrlNokiaNetworkInstance_NetworkInstance_IpLoadBalancing	`path:"ip-load-balancing" module:"srl_nokia-network-instance"`
	Name	*string	`path:"name" module:"srl_nokia-network-instance"`
	OperMacVrfMtu	*uint16	`path:"oper-mac-vrf-mtu" module:"srl_nokia-network-instance"`
	OperState	E_SrlNokiaNetworkInstance_OperState	`path:"oper-state" module:"srl_nokia-network-instance"`
	Protocols	*SrlNokiaNetworkInstance_NetworkInstance_Protocols	`path:"protocols" module:"srl_nokia-network-instance"`
	RouteTable	*SrlNokiaNetworkInstance_NetworkInstance_RouteTable	`path:"route-table" module:"srl_nokia-network-instance"`
	RouterId	*string	`path:"router-id" module:"srl_nokia-network-instance"`
	Type	E_SrlNokiaNetworkInstance_NiType	`path:"type" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_BridgeTable represents the /srl_nokia-network-instance/network-instance/bridge-table YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_BridgeTable struct {
	DiscardUnknownDestMac	*bool	`path:"discard-unknown-dest-mac" module:"srl_nokia-network-instance"`
	MacDuplication	*SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacDuplication	`path:"mac-duplication" module:"srl_nokia-network-instance"`
	MacLearning	*SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLearning	`path:"mac-learning" module:"srl_nokia-network-instance"`
	MacLimit	*SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLimit	`path:"mac-limit" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_BridgeTable implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_BridgeTable) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacDuplication represents the /srl_nokia-network-instance/network-instance/bridge-table/mac-duplication YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacDuplication struct {
	Action	E_SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacDuplication_Action	`path:"action" module:"srl_nokia-network-instance"`
	AdminState	E_SrlNokiaBridgeTableMacDuplication_AdminState	`path:"admin-state" module:"srl_nokia-network-instance"`
	HoldDownTime	*uint32	`path:"hold-down-time" module:"srl_nokia-network-instance"`
	MonitoringWindow	*uint32	`path:"monitoring-window" module:"srl_nokia-network-instance"`
	NumMoves	*uint32	`path:"num-moves" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacDuplication implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacDuplication) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLearning represents the /srl_nokia-network-instance/network-instance/bridge-table/mac-learning YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLearning struct {
	AdminState	E_SrlNokiaBridgeTableMacLearning_AdminState	`path:"admin-state" module:"srl_nokia-network-instance"`
	Aging	*SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLearning_Aging	`path:"aging" module:"srl_nokia-network-instance"`
	MacRelearnOnly	*bool	`path:"mac-relearn-only" module:"srl_nokia-network-instance"`
	OperMacLearning	E_SrlNokiaBridgeTableMacLearning_OperState	`path:"oper-mac-learning" module:"srl_nokia-network-instance"`
	OperMacLearningDisabledReason	E_SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLearning_OperMacLearningDisabledReason	`path:"oper-mac-learning-disabled-reason" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLearning implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLearning) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLearning_Aging represents the /srl_nokia-network-instance/network-instance/bridge-table/mac-learning/aging YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLearning_Aging struct {
	AdminState	E_SrlNokiaBridgeTableMacLearning_AdminState	`path:"admin-state" module:"srl_nokia-network-instance"`
	AgeTime	*int32	`path:"age-time" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLearning_Aging implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLearning_Aging) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLimit represents the /srl_nokia-network-instance/network-instance/bridge-table/mac-limit YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLimit struct {
	MaximumEntries	*int32	`path:"maximum-entries" module:"srl_nokia-network-instance"`
	WarningThresholdPct	*int32	`path:"warning-threshold-pct" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_BridgeTable_MacLimit) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_Icmp represents the /srl_nokia-network-instance/network-instance/icmp YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_Icmp struct {
	Statistics	*SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics	`path:"statistics" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_Icmp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_Icmp) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_Icmp6 represents the /srl_nokia-network-instance/network-instance/icmp6 YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_Icmp6 struct {
	Statistics	*SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics	`path:"statistics" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_Icmp6 implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_Icmp6) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics represents the /srl_nokia-network-instance/network-instance/icmp6/statistics YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics struct {
	LastClear	*string	`path:"last-clear" module:"srl_nokia-network-instance"`
	Total	*SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics_Total	`path:"total" module:"srl_nokia-network-instance"`
	Type	map[E_SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics_Type_Name]*SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics_Type	`path:"type" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics_Total represents the /srl_nokia-network-instance/network-instance/icmp6/statistics/total YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics_Total struct {
	InErrorPackets	*uint64	`path:"in-error-packets" module:"srl_nokia-network-instance"`
	InPackets	*uint64	`path:"in-packets" module:"srl_nokia-network-instance"`
	OutErrorPackets	*uint64	`path:"out-error-packets" module:"srl_nokia-network-instance"`
	OutPackets	*uint64	`path:"out-packets" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics_Total implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics_Total) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics_Type represents the /srl_nokia-network-instance/network-instance/icmp6/statistics/type YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics_Type struct {
	InPackets	*uint64	`path:"in-packets" module:"srl_nokia-network-instance"`
	Name	E_SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics_Type_Name	`path:"name" module:"srl_nokia-network-instance"`
	OutPackets	*uint64	`path:"out-packets" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics_Type implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_Icmp6_Statistics_Type) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics represents the /srl_nokia-network-instance/network-instance/icmp/statistics YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics struct {
	LastClear	*string	`path:"last-clear" module:"srl_nokia-network-instance"`
	Total	*SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics_Total	`path:"total" module:"srl_nokia-network-instance"`
	Type	map[E_SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics_Type_Name]*SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics_Type	`path:"type" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics_Total represents the /srl_nokia-network-instance/network-instance/icmp/statistics/total YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics_Total struct {
	InErrorPackets	*uint64	`path:"in-error-packets" module:"srl_nokia-network-instance"`
	InPackets	*uint64	`path:"in-packets" module:"srl_nokia-network-instance"`
	OutErrorPackets	*uint64	`path:"out-error-packets" module:"srl_nokia-network-instance"`
	OutPackets	*uint64	`path:"out-packets" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics_Total implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics_Total) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics_Type represents the /srl_nokia-network-instance/network-instance/icmp/statistics/type YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics_Type struct {
	InPackets	*uint64	`path:"in-packets" module:"srl_nokia-network-instance"`
	Name	E_SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics_Type_Name	`path:"name" module:"srl_nokia-network-instance"`
	OutPackets	*uint64	`path:"out-packets" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics_Type implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_Icmp_Statistics_Type) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_Interface represents the /srl_nokia-network-instance/network-instance/interface YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_Interface struct {
	Index	*uint64	`path:"index" module:"srl_nokia-network-instance"`
	MacRelearnOnly	*bool	`path:"mac-relearn-only" module:"srl_nokia-network-instance"`
	Name	*string	`path:"name" module:"srl_nokia-network-instance"`
	OperDownReason	E_SrlNokiaNetworkInstance_NetworkInstance_Interface_OperDownReason	`path:"oper-down-reason" module:"srl_nokia-network-instance"`
	OperMacLearning	E_SrlNokiaNetworkInstance_OperState	`path:"oper-mac-learning" module:"srl_nokia-network-instance"`
	OperMacLearningDisabledReason	E_SrlNokiaNetworkInstance_NetworkInstance_Interface_OperMacLearningDisabledReason	`path:"oper-mac-learning-disabled-reason" module:"srl_nokia-network-instance"`
	OperState	E_SrlNokiaNetworkInstance_OperState	`path:"oper-state" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_Interface implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_Interface) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_IpForwarding represents the /srl_nokia-network-instance/network-instance/ip-forwarding YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_IpForwarding struct {
	ReceiveIpv4Check	*bool	`path:"receive-ipv4-check" module:"srl_nokia-network-instance"`
	ReceiveIpv6Check	*bool	`path:"receive-ipv6-check" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_IpForwarding implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_IpForwarding) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_IpLoadBalancing represents the /srl_nokia-network-instance/network-instance/ip-load-balancing YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_IpLoadBalancing struct {
	ResilientHashPrefix	map[string]*SrlNokiaNetworkInstance_NetworkInstance_IpLoadBalancing_ResilientHashPrefix	`path:"resilient-hash-prefix" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_IpLoadBalancing implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_IpLoadBalancing) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_IpLoadBalancing_ResilientHashPrefix represents the /srl_nokia-network-instance/network-instance/ip-load-balancing/resilient-hash-prefix YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_IpLoadBalancing_ResilientHashPrefix struct {
	HashBucketsPerPath	*uint8	`path:"hash-buckets-per-path" module:"srl_nokia-network-instance"`
	IpPrefix	*string	`path:"ip-prefix" module:"srl_nokia-network-instance"`
	MaxPaths	*uint8	`path:"max-paths" module:"srl_nokia-network-instance"`
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_IpLoadBalancing_ResilientHashPrefix implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_IpLoadBalancing_ResilientHashPrefix) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_Protocols represents the /srl_nokia-network-instance/network-instance/protocols YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_Protocols struct {
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_Protocols implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_Protocols) IsYANGGoStruct() {}


// SrlNokiaNetworkInstance_NetworkInstance_RouteTable represents the /srl_nokia-network-instance/network-instance/route-table YANG schema element.
type SrlNokiaNetworkInstance_NetworkInstance_RouteTable struct {
}

// IsYANGGoStruct ensures that SrlNokiaNetworkInstance_NetworkInstance_RouteTable implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*SrlNokiaNetworkInstance_NetworkInstance_RouteTable) IsYANGGoStruct() {}


